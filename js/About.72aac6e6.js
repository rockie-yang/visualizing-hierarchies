(window.webpackJsonp=window.webpackJsonp||[]).push([["About"],{b8dc:function(e,n,t){"use strict";t("c483")},c483:function(e,n,t){},f820:function(e,n,t){"use strict";t.r(n);var a=t("3041"),i=t("c87a"),s={components:{SidenavLayout:a.default,ImageSlider:i.c},data:function(){return{readme:function(){return"# What is a Hierarchy\n\nA Hierarchy is a special type of `graph`.\n\nGraphs are simply structures used to model pairwise relations between objects.\n\nThey consist of vertices (nodes) which are connected by edges (links).\n\nhierarchies are `unidirected` trees that follow specific rules:\n\n> There Must be a single root node with no parent\n>\n> All nodes must have an edge\n>\n> Must be [acylic](https://www.youtube.com/watch?v=Y4hlrkidWQo)\n>\n> Each node can only have 1 parent\n\n## Uses\n\nHierarchies serve many purposes, and we use them on a daily basis\n\n1. DOM Elements\n1. Folders / Files\n1. Decision Trees\n1. Binary Trees\n1. Family Trees\n1. Geography\n1. Organograms\n1. Taxonomy\n1. Word Trees\n\nAnd so on...\n"},images:[{url:"/static/images/graph vs tree.png",title:"A Tree (Left) / A Graph (Right)"},{url:"/static/images/dom.png",title:"DOM Hierarchy Sample"},{url:"/static/images/decisiontree.png",title:"Decision Tree"},{url:"/static/images/organogram.jpg",title:"Organogram"},{url:"/static/images/taxonomy.jpg",title:"Taxonomy"},{url:"/static/images/imagenet.png",title:"More Classification Uses"}],curIndex:0}}},r=(t("b8dc"),t("2877")),o=Object(r.a)(s,(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("sidenav-layout",{attrs:{readme:e.readme}},[t("div",{staticClass:"about h-full"},[t("image-slider",{attrs:{items:e.images,"active-index":e.curIndex},on:{"update:activeIndex":function(n){e.curIndex=n},"update:active-index":function(n){e.curIndex=n}}})],1)])}),[],!1,null,"4bf76087",null);n.default=o.exports}}]);